---
name: "Release"

on:
  workflow_dispatch:

env:
  python_version: "{{ cookiecutter.python_version }}"

defaults:
  run:
    shell: 'bash --noprofile --norc -Eeuo pipefail {0}'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    outputs:
      tag: ${{ "{{ steps.release.outputs.tag }}" }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: 'false'

      - name: Bootstrap repository
        uses: ./.github/actions/bootstrap
        with:
          token: ${{ "{{ secrets.GITHUB_TOKEN }}" }}
          python-version: ${{ "{{ env.python_version }}" }}

      - name: Create release
        id: release
        env:
          GH_TOKEN: ${{ "{{ secrets.GITHUB_TOKEN }}" }}
        run: |
          # Configure git
          git config user.name "{{ cookiecutter.company_name }} Automation"
          git config user.email "automation@{{ cookiecutter.company_domain }}"

          # Run semantic-release (auto-determines version from conventional commits)
          task -v release

          # Get the new tag
          TAG=$(git describe --tags --abbrev=0)
          echo "tag=${TAG}" | tee -a "${GITHUB_OUTPUT}"
          echo "Created release tag: ${TAG}"
{%- if cookiecutter.dockerhub == 'yes' %}

  publish-docker:
    name: Publish Docker Image
    needs: release
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ "{{ needs.release.outputs.tag }}" }}
          persist-credentials: 'false'

      - name: Bootstrap repository
        uses: ./.github/actions/bootstrap
        with:
          token: ${{ "{{ secrets.GITHUB_TOKEN }}" }}
          python-version: ${{ "{{ env.python_version }}" }}

      - name: Set up QEMU for cross-platform emulation
        uses: docker/setup-qemu-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ "{{ secrets.DOCKERHUB_USERNAME }}" }}
          password: ${{ "{{ secrets.DOCKERHUB_PAT }}" }}

      - name: Build and publish multiplatform Docker image
        run: |
          # Extract version from tag (remove 'v' prefix if present)
          VERSION="${{ "{{ needs.release.outputs.tag }}" }}"
          VERSION="${VERSION#v}"

          # Build and push multiplatform image
          task -v publish VERSION="${VERSION}" PLATFORM=all
{%- endif %}
